// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vehifleet.API.DbAccess;

namespace Vehifleet.API.Migrations
{
    [DbContext(typeof(VehifleetContext))]
    [Migration("20181106191828_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vehifleet.Data.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("FuelConsumed");

                    b.Property<int?>("ManagerId")
                        .IsRequired();

                    b.Property<int>("Mileage");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<string>("Department")
                        .IsRequired();

                    b.Property<int>("FuelConsumed");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<bool>("IsManager");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("LocationCode");

                    b.Property<int>("Mileage");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired();

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired();

                    b.Property<string>("Role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("LocationCode");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Inspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<int>("Mileage");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Notes");

                    b.Property<bool>("Passed");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<DateTime>("ExpirationDate");

                    b.Property<string>("InsuranceId")
                        .IsRequired();

                    b.Property<int>("Mileage");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Notes");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Location", b =>
                {
                    b.Property<string>("LocationCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.HasKey("LocationCode");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Maintenance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<bool>("Completed");

                    b.Property<DateTime>("DateEnd");

                    b.Property<DateTime>("DateStart");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Distance");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<string>("ChassisCode")
                        .IsRequired();

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<int>("FuelConsumed");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LocationCode");

                    b.Property<int>("Mileage");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<int>("Status");

                    b.Property<int>("VehicleSpecificationId");

                    b.Property<int>("YearOfManufacture");

                    b.HasKey("Id");

                    b.HasIndex("LocationCode");

                    b.HasIndex("VehicleSpecificationId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.VehicleSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddedBy")
                        .IsRequired();

                    b.Property<DateTime>("AddedOn");

                    b.Property<string>("ConfigurationCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(16, 2)");

                    b.Property<int>("DistanceBetweenOilChange");

                    b.Property<int>("FuelConsumed");

                    b.Property<int>("Horsepower");

                    b.Property<string>("MaintenanceNotes");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Mileage");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<int>("Seats");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.ToTable("VehicleSpecifications");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Booking", b =>
                {
                    b.HasOne("Vehifleet.Data.Models.Employee", "Employee")
                        .WithMany("Bookings")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Vehifleet.Data.Models.Employee", "Manager")
                        .WithMany("ManagedBookings")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Vehifleet.Data.Models.Vehicle", "Vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Employee", b =>
                {
                    b.HasOne("Vehifleet.Data.Models.Location")
                        .WithMany("Employees")
                        .HasForeignKey("LocationCode");
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Inspection", b =>
                {
                    b.HasOne("Vehifleet.Data.Models.Vehicle", "Vehicle")
                        .WithMany("Inspections")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Insurance", b =>
                {
                    b.HasOne("Vehifleet.Data.Models.Vehicle", "Vehicle")
                        .WithMany("Insurances")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Maintenance", b =>
                {
                    b.HasOne("Vehifleet.Data.Models.Vehicle", "Vehicle")
                        .WithMany("Maintenances")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Vehifleet.Data.Models.Vehicle", b =>
                {
                    b.HasOne("Vehifleet.Data.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationCode");

                    b.HasOne("Vehifleet.Data.Models.VehicleSpecification", "VehicleSpecification")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleSpecificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
